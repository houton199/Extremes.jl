var documenterSearchIndex = {"docs":
[{"location":"functions/#Functions-1","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functions/#","page":"Functions","title":"Functions","text":"Modules = [Extremes]\nPrivate = false\nOrder = [:function]","category":"page"},{"location":"functions/#Extremes.diagnosticplots-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.diagnosticplots","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.diagnosticplots_std-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.diagnosticplots_std","text":"TODO : Desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.getcluster-Tuple{Array{#s17,1} where #s17<:Real,Real}","page":"Functions","title":"Extremes.getcluster","text":"getcluster(y::Vector{<:Real}, u::Real; runlength::Int=1)::Vector{Cluster}\n\nThreshold exceedances separated by fewer than r non-exceedances belong to the same cluster. The value r is corresponds to the runlength parameter. This approach is referred to as the runs declustering scheme (see Coles, 2001 sec. 5.3.2).\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.getcluster-Tuple{Array{#s20,1} where #s20<:Real,Real,Real}","page":"Functions","title":"Extremes.getcluster","text":"getcluster(y::Vector{<:Real}, u₁::Real, u₂::Real)::Vector{Cluster}\n\nReturns a DataFrame with clusters for exceedance models. A cluster is defined as a sequence where values are higher than u₂ with at least a value higher than threshold u₁.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfit-Tuple{Array{#s14,1} where #s14<:Real,Array{#s13,1} where #s13<:Real}","page":"Functions","title":"Extremes.gevfit","text":"gevfit(y::Vector{<:Real}, initialvalues::Vector{<:Real};\n    locationcov::Vector{<:DataItem} = Vector{Variable}(),\n    logscalecov::Vector{<:DataItem} = Vector{Variable}(),\n    shapecov::Vector{<:DataItem} = Vector{Variable}(),)::MaximumLikelihoodEVA\n\nFit the Generalized Extreme Value (GEV) distribution by maximum likelihood to the vector of data y using the intial values initialvalues.\n\nThe covariate may be standardized to facilitate the estimation.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfit-Tuple{Array{#s17,1} where #s17<:Real}","page":"Functions","title":"Extremes.gevfit","text":"gevfit(y::Vector{<:Real};\n    locationcov::Vector{Vector{T}} where T<:Real = Vector{Vector{Float64}}(),\n    logscalecov::Vector{Vector{T}} where T<:Real = Vector{Vector{Float64}}(),\n    shapecov::Vector{Vector{T}} where T<:Real = Vector{Vector{Float64}}())\n\nFit the Generalized Extreme Value (GEV) distribution by maximum likelihood to the vector of data y.\n\nThe optional parameter locationcov is a vector containing the covariates for the parameter μ. The optional parameter logscalecov is a vector containing the covariates for the parameter σ. The optional parameter shapecov is a vector containing the covariates for the parameter ξ.\n\nExample with a non-stationary location parameter:\n\nusing Extremes, Distributions\n\n# Sample size\nn = 300\n\n# Covariate\nx = collect(1:n)\n\n# Location as function of the covariate\nμ = x*1/100\n\n# Sample from the non-stationary GEV distribution\npd = GeneralizedExtremeValue.(μ,1,.1)\ny = rand.(pd)\n\n# Estimate the parameters\ngevfit(y, locationcov = [Variable(\"x\", x)])\n\nThe covariate may be standardized to facilitate the estimation.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfit-Tuple{BlockMaxima,Array{#s67,1} where #s67<:Real}","page":"Functions","title":"Extremes.gevfit","text":"gevfit(model::BlockMaxima)\n\nFit the Generalized Extreme Value (GEV) distribution by maximum likelihood of the BlockMaxima model model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfit-Tuple{DataFrame,Symbol,Array{#s43,1} where #s43<:Real}","page":"Functions","title":"Extremes.gevfit","text":"gevfit(df::DataFrame, datacol::Symbol, initialvalues::Vector{<:Real};\n    locationcovid::Vector{Symbol}=Symbol[],\n    logscalecovid::Vector{Symbol}=Symbol[],\n    shapecovid::Vector{Symbol}=Symbol[])::MaximumLikelihoodEVA\n\nFit the Generalized Extreme Value (GEV) distribution by maximum likelihood to the vector of data contained in the dataframe df at the column datacol using the initial values ìnitialvalues.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfit-Tuple{DataFrame,Symbol}","page":"Functions","title":"Extremes.gevfit","text":"gevfit(df::DataFrame, datacol::Symbol;\n    locationcovid::Vector{Symbol}=Symbol[],\n    logscalecovid::Vector{Symbol}=Symbol[],\n    shapecovid::Vector{Symbol}=Symbol[])::MaximumLikelihoodEVA\n\nFit the Generalized Extreme Value (GEV) distribution by maximum likelihood to the vector of data contained in the dataframe df at the column datacol.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfitbayes-Tuple{Array{#s15,1} where #s15<:Real}","page":"Functions","title":"Extremes.gevfitbayes","text":"gevfitbayes(y::Vector{<:Real};\n    locationcov::Vector{Vector{T}} where T<:Real = Vector{Vector{Float64}}(),\n    logscalecov::Vector{Vector{T}} where T<:Real = Vector{Vector{Float64}}(),\n    shapecov::Vector{Vector{T}} where T<:Real = Vector{Vector{Float64}}(),\n    niter::Int=5000, warmup::Int=2000)\n\nFit the Generalized Extreme Value (GEV) distribution under the Bayesian paradigm to the vector of data y.\n\nThe optional parameter locationcov is a vector containing the covariates for the parameter μ. The optional parameter logscalecov is a vector containing the covariates for the parameter σ. The optional parameter shapecov is a vector containing the covariates for the parameter ξ.\n\nThe covariate may be standardized to facilitate the estimation.\n\nA random sample of the posterior distribution is generated using the NUTS algortihm.\n\nOnly flat prior is now supported.\n\nExample with a non-stationary location parameter:\n\n# Sample size\nn = 300\n\n# Covariate\nx = collect(1:n)\n\n# Location as function of the covariate\nμ = x*1/100\n\n# Sample from the non-stationary GEV distribution\npd = GeneralizedExtremeValue.(μ,1,.1)\ny = rand.(pd)\n\n# Estimate the parameters\ngevfitbayes(y, locationcov = [Variable(\"x\", x)])\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfitbayes-Tuple{BlockMaxima}","page":"Functions","title":"Extremes.gevfitbayes","text":"gevfitbayes(model::BlockMaxima; niter::Int=5000, warmup::Int=2000)\n\nFit a non-stationary Generalized Extreme Value (GEV) distribution under the Bayesian paradigm of the BlockMaxima model model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfitbayes-Tuple{DataFrame,Symbol}","page":"Functions","title":"Extremes.gevfitbayes","text":"gevfitbayes(df::DataFrame, datacol::Symbol;\n    locationcovid::Vector{Symbol}=Symbol[],\n    logscalecovid::Vector{Symbol}=Symbol[],\n    shapecovid::Vector{Symbol}=Symbol[],\n    niter::Int=5000, warmup::Int=2000)::MaximumLikelihoodEVA\n\nFit a Generalized Extreme Value (GEV) distribution under the Bayesian paradigm to the vector of data contained in the dataframe df at the column datacol.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfitpwm-Tuple{Array{#s67,1} where #s67<:Real}","page":"Functions","title":"Extremes.gevfitpwm","text":"gevfitpwm(y::Vector{<:Real})::pwmEVA\n\nEstimate the Generalized Extreme value distribution parameters with the probability weighted moments as described in Hosking et al. (1985).\n\nReference: Hosking, J. R. M., Wallis, J. R. and Wood, E. F. (1985). Estimation of the generalized extreme-value     distribution by the method of probability-weighted moments. Technometrics, 27, 251-261.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfitpwm-Tuple{BlockMaxima{Distributions.GeneralizedExtremeValue}}","page":"Functions","title":"Extremes.gevfitpwm","text":"gevfitpwm(model::BlockMaxima)::pwmEVA\n\nEstimate the Generalized Extreme value distribution parameters with the probability weighted moments as described in Hosking et al. (1985).\n\nWith the methods of moments, it is not possible to include covariates in the model. If covariates are provided, they are ignored and the stationary model is fitted.\n\nReference: Hosking, J. R. M., Wallis, J. R. and Wood, E. F. (1985). Estimation of the generalized extreme-value     distribution by the method of probability-weighted moments. Technometrics, 27, 251-261.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gevfitpwm-Tuple{DataFrame,Symbol}","page":"Functions","title":"Extremes.gevfitpwm","text":"gevfitpwm(df::DataFrame, datacol::Symbol)::pwmEVA\n\nEstimate the Generalized Extreme value distribution parameters with the probability weighted moments as described in Hosking et al. (1985).\n\nReference: Hosking, J. R. M., Wallis, J. R. and Wood, E. F. (1985). Estimation of the generalized extreme-value     distribution by the method of probability-weighted moments. Technometrics, 27, 251-261.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfit-Tuple{Array{#s19,1} where #s19<:Real,Array{#s18,1} where #s18<:Real}","page":"Functions","title":"Extremes.gpfit","text":"gpfit(y::Vector{<:Real}, initialvalues::Vector{<:Real};\n    logscalecov::Vector{<:DataItem} = Vector{Variable}(),\n    shapecov::Vector{<:DataItem} = Vector{Variable}())::MaximumLikelihoodEVA\n\nFit the Generalized Pareto (GP) distribution by maximum likelihood to the vector of data y using the initial values initialvalues.\n\nThe optional parameter logscalecov is a vector containing the covariates for the parameter σ. The optional parameter shapecov is a vector containing the covariates for the parameter ξ.\n\nThe covariate may be standardized to facilitate the estimation.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfit-Tuple{Array{#s23,1} where #s23<:Real}","page":"Functions","title":"Extremes.gpfit","text":"gpfit(y::Vector{<:Real};\n    logscalecov::Vector{<:DataItem} = Vector{Variable}(),\n    shapecov::Vector{<:DataItem} = Vector{Variable}())::MaximumLikelihoodEVA\n\nFit the Generalized Pareto (GP) distribution by maximum likelihood to the vector of data y.\n\nThe optional parameter logscalecov is a vector containing the covariates for the parameter σ. The optional parameter shapecov is a vector containing the covariates for the parameter ξ.\n\nExample with a non-stationary location parameter:\n\n# Sample size\nn = 300\n\n# Covariate\nx = collect(1:n)\n\n# Location as function of the covariate\nϕ = x*1/500\nσ = exp.(ϕ)\n\n# Sample from the non-stationary GEV distribution\npd = GeneralizedPareto.(σ,.1)\ny = rand.(pd)\n\n# Estimate the parameters\ngpfit(y, logscalecov = [Variable(\"x\", x)])\n\nThe covariate may be standardized to facilitate the estimation.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfit-Tuple{DataFrame,Symbol,Array{#s43,1} where #s43<:Real}","page":"Functions","title":"Extremes.gpfit","text":"gpfit(df::DataFrame, datacol::Symbol, initialvalues::Vector{<:Real};\n    logscalecovid::Vector{Symbol}=Symbol[],\n    shapecovid::Vector{Symbol}=Symbol[])::MaximumLikelihoodEVA\n\nFit a Generalized Pareto (GP) distribution by maximum likelihood to the vector of data contained in the dataframe df at the column datacol using the initial values initialvalues.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfit-Tuple{DataFrame,Symbol}","page":"Functions","title":"Extremes.gpfit","text":"gpfit(df::DataFrame, datacol::Symbol;\n    logscalecovid::Vector{Symbol}=Symbol[],\n    shapecovid::Vector{Symbol}=Symbol[])::MaximumLikelihoodEVA\n\nFit a Generalized Pareto (GP) distribution by maximum likelihood to the vector of data contained in the dataframe df at the column datacol.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfit-Tuple{ThresholdExceedance,Array{#s67,1} where #s67<:Real}","page":"Functions","title":"Extremes.gpfit","text":"gpfit(model::ThresholdExceedance)::MaximumLikelihoodEVA\n\nFit the Generalized Pareto (GP) distribution by maximum likelihood to the ThresholdExceedance model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfitbayes-Tuple{Array{#s20,1} where #s20<:Real}","page":"Functions","title":"Extremes.gpfitbayes","text":"gpfitbayes(y::Vector{<:Real};\n     logscalecov::Vector{<:DataItem} = Vector{Variable}(),\n     shapecov::Vector{<:DataItem} = Vector{Variable}(),\n     niter::Int=5000, warmup::Int=2000)::BayesianEVA\n\nFit a non-stationary Generalized Pareto (GEV) distribution under the Bayesian paradigm to the vector of data contained in the Vector y.\n\nThe optional parameter logscalecov is a vector containing the covariates for the parameter σ. The optional parameter shapecov is a vector containing the covariates for the parameter ξ.\n\nThe covariate may be standardized to facilitate the estimation.\n\nA random sample of the posterior distribution is generated using the NUTS algortihm.\n\nOnly flat prior is now supported.\n\nExample with a non-stationary location parameter:\n\n# Sample size\nn = 300\n\n# Covariate\nx = collect(1:n)\n\n# Location as function of the covariate\nϕ = x*1/500\nσ = exp.(ϕ)\n\n# Sample from the non-stationary GEV distribution\npd = GeneralizedPareto.(σ,.1)\ny = rand.(pd)\n\n# Estimate the parameters\ngpfitbayes(y, logscalecov = [Variable(\"x\", x)])\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfitbayes-Tuple{DataFrame,Symbol}","page":"Functions","title":"Extremes.gpfitbayes","text":"gpfitbayes(df::DataFrame, datacol::Symbol;\n    logscalecovid::Vector{Symbol}=Symbol[],\n    shapecovid::Vector{Symbol}=Symbol[],\n    niter::Int=5000, warmup::Int=2000)::MaximumLikelihoodEVA\n\nFit a Generalized Pareto (GP) distribution under the Bayesian paradigm to the vector of data contained in the dataframe df at the column datacol.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfitbayes-Tuple{ThresholdExceedance}","page":"Functions","title":"Extremes.gpfitbayes","text":"gpfitbayes(model::ThresholdExceedance, niter::Int=5000, warmup::Int=2000)::BayesianEVA\n\nFit the Generalized Pareto (GP) distribution under the Bayesian paradigm to the ThresholdExceedance model.\n\nA random sample from the posterior distribution is generated using the NUTS algortihm.\n\nOnly flat prior is now supported.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfitpwm-Tuple{Array{#s67,1} where #s67<:Real}","page":"Functions","title":"Extremes.gpfitpwm","text":"gpfitpwm(y::Vector{<:Real})::pwmEVA\n\nEstimate the Generalized Pareto distribution parameters with the probability weighted moments as described in Hosking & Wallis (1987).\n\nReference: Hosking, J. R. M. and Wallis, J. R. (1987). Parameter and Quantile Estimation for the Generalized Pareto Distribution,     Technometrics, 29(3), 339-349.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfitpwm-Tuple{DataFrame,Symbol}","page":"Functions","title":"Extremes.gpfitpwm","text":"gpfitpwm(df::DataFrame, datacol::Symbol)::pwmEVA\n\nEstimate the Generalized Pareto distribution parameters with the probability weighted moments as described in Hosking & Wallis (1987).\n\nReference: Hosking, J. R. M. and Wallis, J. R. (1987). Parameter and Quantile Estimation for the Generalized Pareto Distribution,     Technometrics, 29(3), 339-349.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.gpfitpwm-Tuple{ThresholdExceedance}","page":"Functions","title":"Extremes.gpfitpwm","text":"gpfitpwm(model::ThresholdExceedance)::pwmEVA\n\nEstimate the Generalized Pareto distribution parameters with the probability weighted moments as described in Hosking & Wallis (1987).\n\nReference: Hosking, J. R. M. and Wallis, J. R. (1987). Parameter and Quantile Estimation for the Generalized Pareto Distribution,     Technometrics, 29(3), 339-349.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.histplot-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.histplot","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.histplot_data-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.histplot_data","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.load-Tuple{String}","page":"Functions","title":"Extremes.load","text":"load(name::String)::DataFrame\n\nReturns the data associated with the name.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.probplot-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.probplot","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.probplot_data-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.probplot_data","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.probplot_std-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.probplot_std","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.probplot_std_data-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.probplot_std_data","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.qqplot-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.qqplot","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.qqplot_data-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.qqplot_data","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.qqplot_std-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.qqplot_std","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.qqplot_std_data-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.qqplot_std_data","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.returnlevel","page":"Functions","title":"Extremes.returnlevel","text":"returnlevel(fm::BayesianEVA{ThresholdExceedance}, threshold::Vector{<:Real}, nobservation::Int,\n    nobsperblock::Int, returnPeriod::Real, confidencelevel::Real=.95)::ReturnLevel\n\nCompute the return level of the return period returnPeriod from the fitted model fm.\n\n\n\n\n\n","category":"function"},{"location":"functions/#Extremes.returnlevel","page":"Functions","title":"Extremes.returnlevel","text":"returnlevel(fm::BayesianEVA{BlockMaxima}, returnPeriod::Real, confidencelevel::Real=.95)::ReturnLevel\n\nCompute the return level of the return period returnPeriod from the fitted model fm.\n\n\n\n\n\n","category":"function"},{"location":"functions/#Extremes.returnlevel","page":"Functions","title":"Extremes.returnlevel","text":"returnlevel(fm::MaximumLikelihoodEVA{BlockMaxima}, returnPeriod::Real, confidencelevel::Real=.95)::ReturnLevel\n\nCompute the return level of the return period returnPeriod from the fitted model fm.\n\n\n\n\n\n","category":"function"},{"location":"functions/#Extremes.returnlevel","page":"Functions","title":"Extremes.returnlevel","text":"returnlevel(fm::MaximumLikelihoodEVA{ThresholdExceedance}, threshold::Vector{<:Real}, nobservation::Int,\n    nobsperblock::Int, returnPeriod::Real, confidencelevel::Real=.95)::ReturnLevel\n\nCompute the return level of the return period returnPeriod from the fitted model fm.\n\nThe threshold should be a scalar. A varying threshold is not yet implemented.\n\n\n\n\n\n","category":"function"},{"location":"functions/#Extremes.returnlevelplot-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.returnlevelplot","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.returnlevelplot_data-Tuple{MaximumLikelihoodEVA}","page":"Functions","title":"Extremes.returnlevelplot_data","text":"TODO : desc\n\n\n\n\n\n","category":"method"},{"location":"functions/#Types-1","page":"Functions","title":"Types","text":"","category":"section"},{"location":"functions/#","page":"Functions","title":"Functions","text":"Modules = [Extremes]\nPrivate = false\nOrder = [:type]","category":"page"},{"location":"functions/#Extremes.BlockMaxima-Tuple{Variable}","page":"Functions","title":"Extremes.BlockMaxima","text":"BlockMaxima(data::Vector{<:Real};\n    locationcov::Vector{Variable} = Vector{Variable}(),\n    logscalecov::Vector{Variable} = Vector{Variable}(),\n    shapecov::Vector{Variable} = Vector{Variable}())::BlockMaxima\n\nCreates a BlockMaxima structure.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.BlockMaxima-Union{Tuple{Variable}, Tuple{T}} where T<:Distributions.Distribution","page":"Functions","title":"Extremes.BlockMaxima","text":"BlockMaxima{T}(data::Vector{<:Real};\n    locationcov::Vector{Variable} = Vector{Variable}(),\n    logscalecov::Vector{Variable} = Vector{Variable}(),\n    shapecov::Vector{Variable} = Vector{Variable}())::BlockMaxima where T<:Distribution\n\nCreates a BlockMaxima structure.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.ThresholdExceedance-Tuple{Variable}","page":"Functions","title":"Extremes.ThresholdExceedance","text":"ThresholdExceedance(exceedances::Vector{<:Real};\n    logscalecov::Vector{<:DataItem} = Vector{Variable}(),\n    shapecov::Vector{<:DataItem} = Vector{Variable}())::ThresholdExceedance\n\nCreates a ThresholdExceedance structure.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Extremes.VariableStd-Tuple{String,Array{#s21,1} where #s21<:Real}","page":"Functions","title":"Extremes.VariableStd","text":"VariableStd(name::String, z::Vector{<:Real})::VariableStd\n\nConstruct a VariableStd type from the standardized vector z with the name name.\n\n\n\n\n\n","category":"method"},{"location":"getting_started/#Tutorial-1","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"This tutorial shows the functionalities of Extremes.jl. They are illustrated by reproducing some of the results shown by Coles (2001) in An Introduction to Statistical Modeling of Extreme  Values.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Before executing this tutorial, make sure to have installed the following packages:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Extremes.jl (of course)\nDataFrames.jl (for using the DataFrame type)\nDistributions.jl (for using probability distribution objects)\nGadfly.jl (for plotting)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"and import them using the following command:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"using Extremes, Dates, DataFrames, Distributions, Gadfly","category":"page"},{"location":"getting_started/#Model-for-stationary-block-maxima-1","page":"Tutorial","title":"Model for stationary block maxima","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"The stationary BlockMaxima model is illustrated using the annual maximum sea-levels recorded at Port Pirie in South Australia from 1923 to 1987, studied by Coles (2001) in Chapter 3.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"using Extremes, DataFrames, Distributions, Gadfly","category":"page"},{"location":"getting_started/#Load-the-data-1","page":"Tutorial","title":"Load the data","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Loading the annual maximum sea-levels at Port Pirie:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"data = load(\"portpirie\")\nfirst(data,5)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Plotting the data using the Gadfly package:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"plot(data, x=:Year, y=:SeaLevel, Geom.line)","category":"page"},{"location":"getting_started/#GEV-parameters-estimation-1","page":"Tutorial","title":"GEV parameters estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"In this example, the Generalized Extreme Value (GEV) distribution is fitted by maximum likelihood to the annual maximum sea-levels at Port-Pirie.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"The data have been loaded in a DataFrame. The function gevfit can be called directly with the dataframe as the first argument and the data column symbol as the second argument as follows:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gevfit(data, :SeaLevel)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"The function gevfit returns a MaximumLikelihoodEVA object which contains:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"the structure name indicating in particular the estimation method (maximum likelihood in this example);\nthe statistical model (the stationary block maxima model in this example);\nthe location, log-scale and shape parameter estimates respectively in the vector $ θ̂ $.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"note: Note\nThe function returns the estimates of the log-scale parameter phi = log sigma.","category":"page"},{"location":"getting_started/#Diagnostics-plots-1","page":"Tutorial","title":"Diagnostics plots","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"TODO","category":"page"},{"location":"getting_started/#Return-level-estimation-1","page":"Tutorial","title":"Return level estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"T-year return level estimate can be obtained using the function returnlevel on a fittedEVA object. The first argument is the fitted model, the second is the return period in years and the last one is the confidence level for computing the confidence interval.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"For example, the 100-year return level for the Port Pirie block maxima model and the corresponding 95% confidence interval can be obtained with this commands:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r = returnlevel(fm, 100, .95)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"where the value can be accessed with","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.value","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"and where the corresponding confidence interval can be accessed with","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.cint","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"note: Note\nIn this example of a stationary model, the function returns a unit dimension vector for the return level and a vector containing only one vector for the confidence interval. The reason is that the function always returns the same type in the stationary and non-stationary case. The function is therefore type-stable allowing better performance of code execution.  ","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"To get the scalar return level in the stationary case, the following command can be used:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.value[]","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"To get the scalar confidence interval in the stationary case, the following command can be used:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.cint[]","category":"page"},{"location":"getting_started/#Probability-weighted-moments-estimation-1","page":"Tutorial","title":"Probability weighted moments estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Probability weighted moments estimation of the GEV parameters can also be performed by using the gevfitpwm function. All the methods also apply to the pwmEVA object.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gevfitpwm(data[:,:SeaLevel])","category":"page"},{"location":"getting_started/#Bayesian-estimation-1","page":"Tutorial","title":"Bayesian estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Bayesian estimation of the GEV parameters can also be performed by using the gevfitbayes function. All the methods also apply to the BayesianEVA object.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gevfitbayes(data[:,:SeaLevel])","category":"page"},{"location":"getting_started/#Model-for-stationary-threshold-exceedances-1","page":"Tutorial","title":"Model for stationary threshold exceedances","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"The stationary ThresholdExceedance model is illustrated using the daily rainfall accumulations at a location in south-west England from 1914 to 1962. This dataset was studied by Coles (2001) in Chapter 4.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"using Extremes, Dates, DataFrames, Distributions, Gadfly","category":"page"},{"location":"getting_started/#Load-the-data-2","page":"Tutorial","title":"Load the data","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Loading the daily rainfall at a location in South-England:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"data = load(\"rain\")\nfirst(data,5)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Plotting the data using the Gadfly package:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"plot(data, x=:Date, y=:Rainfall, Geom.point, Theme(discrete_highlight_color=c->nothing))","category":"page"},{"location":"getting_started/#Threshold-selection-1","page":"Tutorial","title":"Threshold selection","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"TODO","category":"page"},{"location":"getting_started/#GPD-parameters-estimation-1","page":"Tutorial","title":"GPD parameters estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Let's first identify the threshold exceedances:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"threshold = 30.0\ndf = filter(row -> row.Rainfall > threshold, data)\nfirst(df, 5)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Get the exceedances above the threshold:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"df[!,:Rainfall] =  df[!,:Rainfall] .- threshold\nrename!(df, :Rainfall => :Exceedance)\nfirst(df, 5)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Generalized Pareto parameter estimation by maximum likelihood:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gpfit(df, :Exceedance)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"note: Note\nThe function returns the estimates of the log-scale parameter phi = log sigma.","category":"page"},{"location":"getting_started/#Return-level-estimation-2","page":"Tutorial","title":"Return level estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"With the ThresholdExceedance structure, the returnlevel function requires several arguments to calculate the T-year return level:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"the threshold value;\nthe number of total observation (below and above the threshold);\nthe number of observations per year;\nthe return period T;\nthe confidence level for computing the confidence interval.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"The function uses the Peaks-Over-Threshold model definition (Coles, 2001, Chapter 4) for computing the T-year return level.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"For the rainfall example, the 100-year return level can be estimated as follows:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r = returnlevel(fm, threshold, size(data,1), 365, 100, .95)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"where the value can be accessed with","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.value","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"and where the corresponding confidence interval can be accessed with","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.cint","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"note: Note\nIn this example of a stationary model, the function returns a unit dimension vector for the return level and a vector containing only one vector for the confidence interval. The reason is that the function always returns the same type in the stationary and non-stationary case. The function is therefore type-stable allowing better performance of code execution.  ","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"To get the scalar return level in the stationary case, the following command can be used:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.value[]","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"To get the scalar confidence interval in the stationary case, the following command can be used:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.cint[]","category":"page"},{"location":"getting_started/#Probability-weighted-moments-estimation-2","page":"Tutorial","title":"Probability weighted moments estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Probability weighted moments estimation of the GEV parameters can also be performed by using the gevfitpwm function. All the methods also apply to the pwmEVA object.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gpfitpwm(df, :Exceedance)","category":"page"},{"location":"getting_started/#Bayesian-estimation-2","page":"Tutorial","title":"Bayesian estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Bayesian estimation of the GEV parameters can also be performed by using the gevfitbayes function. All the methods also apply to the `BayesianEVA object.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gpfitbayes(df, :Exceedance)","category":"page"},{"location":"getting_started/#Model-for-dependent-data-1","page":"Tutorial","title":"Model for dependent data","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"The stationary ThresholdExceedance model is illustrated using the daily rainfall accumulations at a location in south-west England from 1914 to 1962. This dataset was studied by Coles (2001) in Chapter 4.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"using Extremes, Dates, DataFrames, Distributions, Gadfly","category":"page"},{"location":"getting_started/#Load-the-data-3","page":"Tutorial","title":"Load the data","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Loading the daily rainfall at a location in South-England:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"data = load(\"wooster\")\nfirst(data,5)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Plotting the data using the Gadfly package:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"plot(data, x=:Date, y=:Temperature, Geom.point, Theme(discrete_highlight_color=c->nothing))","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"df = copy(data)\ndf[!,:Temperature] = -data[:,:Temperature]\nfilter!(row -> month(row.Date) ∈ (1,2,11,12), df)\nplot(df, x=:Date, y=:Temperature, Geom.point)","category":"page"},{"location":"getting_started/#Declustering-the-threshold-exceedances-1","page":"Tutorial","title":"Declustering the threshold exceedances","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"threshold = -10\ncluster = getcluster(df[:,:Temperature], -10, runlength=4)\nnothing #hide","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"typeof(cluster)","category":"page"},{"location":"getting_started/#GPD-parameters-estimation-2","page":"Tutorial","title":"GPD parameters estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Let's first identify the threshold exceedances:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"threshold = 30.0\ndf = filter(row -> row.Rainfall > threshold, data)\nfirst(df, 5)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Get the exceedances above the threshold:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"df[!,:Rainfall] =  df[!,:Rainfall] .- threshold\nrename!(df, :Rainfall => :Exceedance)\nfirst(df, 5)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Generalized Pareto parameter estimation by maximum likelihood:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gpfit(df, :Exceedance)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"note: Note\nThe function returns the estimates of the log-scale parameter phi = log sigma.","category":"page"},{"location":"getting_started/#Return-level-estimation-3","page":"Tutorial","title":"Return level estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"With the ThresholdExceedance structure, the returnlevel function requires several arguments to calculate the T-year return level:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"the threshold value;\nthe number of total observation (below and above the threshold);\nthe number of observations per year;\nthe return period T;\nthe confidence level for computing the confidence interval.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"The function uses the Peaks-Over-Threshold model definition (Coles, 2001, Chapter 4) for computing the T-year return level.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"For the rainfall example, the 100-year return level can be estimated as follows:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r = returnlevel(fm, threshold, size(data,1), 365, 100, .95)","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"where the value can be accessed with","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.value","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"and where the corresponding confidence interval can be accessed with","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.cint","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"note: Note\nIn this example of a stationary model, the function returns a unit dimension vector for the return level and a vector containing only one vector for the confidence interval. The reason is that the function always returns the same type in the stationary and non-stationary case. The function is therefore type-stable allowing better performance of code execution.  ","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"To get the scalar return level in the stationary case, the following command can be used:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.value[]","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"To get the scalar confidence interval in the stationary case, the following command can be used:","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"r.cint[]","category":"page"},{"location":"getting_started/#Probability-weighted-moments-estimation-3","page":"Tutorial","title":"Probability weighted moments estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Probability weighted moments estimation of the GEV parameters can also be performed by using the gevfitpwm function. All the methods also apply to the pwmEVA object.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gpfitpwm(df, :Exceedance)","category":"page"},{"location":"getting_started/#Bayesian-estimation-3","page":"Tutorial","title":"Bayesian estimation","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Bayesian estimation of the GEV parameters can also be performed by using the gevfitbayes function. All the methods also apply to the `BayesianEVA object.","category":"page"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"fm = gpfitbayes(df, :Exceedance)","category":"page"},{"location":"getting_started/#Model-for-non-stationary-data-1","page":"Tutorial","title":"Model for non-stationary data","text":"","category":"section"},{"location":"getting_started/#","page":"Tutorial","title":"Tutorial","text":"Coles(2001, Chapter 6)","category":"page"},{"location":"contributing/#Contributing-1","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"Contributions are welcomed. Here's the workflow for development of new features, refactoring and bugfix.","category":"page"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"master             # Stable branch, always ready to be tagged\ndev                # Development branch. New features, refactoring, bug and hotfix\n                   # are integrated into dev before going into master.\nfeature/           # New feature needs a `feature` prefix\n   <feature-name>     \nrefactor/          # Refactoring are tagged with a `refactor` prefix\n   <refactor-name>\nbug/               # Prefix for bugs found during development\n   <bug-fix>       \nhotfix/            # Prefix for hotfix (bugs for deployed versions)\n   <hot-fix>    ","category":"page"},{"location":"#Extreme-value-analysis-in-Julia.-1","page":"Extreme value analysis in Julia.","title":"Extreme value analysis in Julia.","text":"","category":"section"},{"location":"#","page":"Extreme value analysis in Julia.","title":"Extreme value analysis in Julia.","text":"Extremes.jl provides exhaustive high-performance functions for the analysis of extreme values in Julia. In particular, methods for block maxima and threshold exceedances models are implemented, such as:","category":"page"},{"location":"#","page":"Extreme value analysis in Julia.","title":"Extreme value analysis in Julia.","text":"Parameter estimation by probability weighted moments, maximum likelihood and Bayesian procedure.\nStationary and non-stationary models.\nDiagnostic plots for assessing model accuracy.\nReturn level estimation.","category":"page"},{"location":"#","page":"Extreme value analysis in Julia.","title":"Extreme value analysis in Julia.","text":"The package is largely based on the books of Coles (2001), An Introduction to Statistical Modeling of Extreme Values, and of Beirlant et al. (2004) Statistics of Extremes: Theory and Applications. The Tutorial section illustrates the package functionalities by reproducing many results obtained by Coles (2001).","category":"page"}]
}
